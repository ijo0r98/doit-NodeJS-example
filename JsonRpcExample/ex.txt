CH11. JSON_RPC 서버 만들기

RPC(Remote Procedure Call): 서버에서 데이터 요청하여 응답받는 과정을 라이버리가 자동으로 처리
                            함수 호출->클라이언트와 서버 간 데이터 주고받는 기능 동작
*JSON-RPC: json포맷으로 데이터 주고받음

요청과 응답 과정
웹문서 함수 호출
-> 라이브러리에서 스텁(stub)을 통해 서버로 요청 보냄
-> 서버에서 함수 실행, 응답 전송
//라이브러리를 통해 이뤄지기 때문에 어떤 데이터를 어떻게 주고받는지 신경 안써도 됨

핸들러 파일 등록
웹 문서의 요청
    id: 고유한 숫자 부여
    method: 서버에 만든 함수 호출할 때 사용하는 이름
    params: 서버에 전달할 데이터->배열형태
->웹 서버에서 지정한 패스로 라우팅, 핸드럴 로딩
->핸들러 통해 처리
->웹 문서에 응답

ex) json-rpc사용하여 서버의 echo함수 실행 과정
웹 페이지에서 echo함수 호출
-> jquery-jsonrpc 라이브러리 호출 (데이터 요청)
-> 웹 서버에 요청
-> jayson모듈을 통해 echo함수 정의 불러옴
-> jayson모듈 통해 처리
-> jquery=jsonrpc 통해 클라이언트에 응답
-> 웹 페이지에 보여줌
**시간 단축

ex) 더하기 함수 추가
    1. 서버쪽에 함수가 들어있는 핸들러 모듈 파일 생성, module.exports에 할당
    2. 새로 만든 핸들러 모듈 파일 등록, 핸들러 모듈 파일의 이름과 클라이언트에서 호출할 때 사용할 이름 등록
    3. 클라이언트 웹 문서에서 서버에 만들어 둔 함수 호출


crypto모듈: 노드에서 기본으로 제공하는 데이터 암호화 모듈
            *웹 브라우저에서 암호화한 데이터와 호환되지 않는 경우도 존재

외장 모듈을 사용하여 암호화, 복호화
클라이언트 요청-> params암호화 -jquery-json-> 서버에 요창
->jayson모듈 echo_encrypted핸들러 실행 -> 복화화 -> result암호화
->웹 페이지에 응답 전송 -jquery-json-> result복호화